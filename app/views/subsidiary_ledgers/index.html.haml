%script{:src => "https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.13.0/moment.min.js"}
%script{:src => "https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datetimepicker/4.17.37/js/bootstrap-datetimepicker.min.js"}


.main.main-content.col-lg-10.p-0.offset-sm-1
  .main-content-container.container-fluid.px-4
    / Page Header
    .page-header.row.no-gutters.py-4
      .col-6.col-sm-4.text-center.text-sm-left.mb-0
        %span.text-uppercase.page-subtitle Overview
        %h3.page-title Subsidiary Ledger
      .col-md-8
        = link_to 'View Amortization Table', "/amortizations/#{params['customer_id']}", :class => "btn btn-sm btn-primary float-right mt-3"
    .row
      .col
        = form_for("up", url: "/subsidiary_ledgers/?customer_id=#{params['customer_id']}&start_date=#{params['id']}", method: "get") do |g|
          .row#datepicker_form_row.mb-3
            .col-md-6
              = g.label "Date Filter", :class=>"label-date float-left"
              = g.date_field :start_date, :class=> "form-control float-left"
              = g.date_field :end_date, :class=> "form-control float-left"
              = g.hidden_field :customer_id, :value=>params['customer_id'].present? ? params['customer_id'] : params['up']['customer_id']
            .col-md-6
              .actions
                = g.submit "Submit", class: "btn btn-primary btn-sm datetimepicker_button"


        %table.table.table-bordered#exportables{:role => 'datatable'}
          - total_debit = 0
          - total_credit = 0
          - total_balance = 0
          - total_others = 0
          %thead
            %tr
              %th 
              %th 
              %th Date
              %th Receipt Num
              %th Name
              %th Memo
              %th Debit
              %th Credit
              %th Balance
            %tbody
              %tr
                %th 
                %th 
                %th 
                %th  
                %th 
                %th 
                %th 
                  = sprintf "%.2f", @customer.contract_price - (@customer.downpayment + @customer.processing_fees)
                  - total_debit += @customer.contract_price - (@customer.downpayment + @customer.processing_fees)
                %th 
                %th 

              - total_principal = 0
              %tr
                %td
                %td 
                  %strong PRINCIPAL
                %td
                %td
                %td
                %td
                %td
                %td
                %td
              - @customer_ledger.each do |a|
                - if a.payment > 0
                  %tr
                    %td
                    %td Payment

                    %td 
                      = a.payment_date.strftime("%b-%d-%Y")
                    %td                      
                      = a.or_num
                    %td
                      = @customer.customer
                    %td
                      = a.memo
                    %td
                      
                    %td
                      = sprintf "%.2f", a.principal
                      - total_principal += a.principal
                    %td
                      = sprintf "%.2f", a.new_balance
                
              %tr
                %td
                %td Total Principal
                %td 
                %td
                %td
                %td
                %td                      
                %td
                  %strong
                    = sprintf "%.2f", total_principal
                    - total_credit += total_principal
                %td


              - total_i = 0
              %tr
                %td
                %td 
                  %strong INTEREST
                %td
                %td
                %td
                %td
                %td
                %td
                %td

              - @customer_ledger.each do |i|
                - if i.payment > 0
                  - total_i += i.interest
                  %tr
                    %td
                    %td Payment

                    %td 
                      = i.payment_date.strftime("%b-%d-%Y")
                    %td
                      = i.or_num
                    %td
                      = @customer.customer
                    %td
                      = i.memo
                    %td                      
                    %td
                      = sprintf "%.2f", i.interest
                    %td
                      = sprintf "%.2f", total_i
              %tr
                %td
                %td Total Interest
                %td 
                %td
                %td
                %td
                %td                      
                %td
                  %strong
                    = sprintf "%.2f", total_i

                %td
                  %strong
                    = sprintf "%.2f", total_i
                    
              - running_bal_dp = 0
              %tr
                %td
                %td 
                  %strong DOWNPAYMENT
                %td
                %td
                %td
                %td
                %td
                  %strong
                    = @customer.downpayment
                %td
                %td
              
              - @customer_ledger.each do |p|
                - if p.downpayment != 0.0
                  %tr
                    %td
                    %td Payment

                    %td 
                      = p.payment_date.strftime("%b-%d-%Y")
                    %td
                      = p.or_num
                    %td
                      = @customer.customer
                    %td
                      = p.memo
                    %td
                    %td
                      - running_bal_dp += p.downpayment
                      = sprintf "%.2f", p.downpayment
                    %td
                      = @customer.downpayment - running_bal_dp

                
              %tr
                %td
                %td Total Paid
                %td 
                %td
                %td
                %td
                %td                      
                %td
                  %strong
                    = sprintf "%.2f", @customer_ledger.sum(:downpayment)
                    - total_debit += @customer.downpayment
                    - total_credit += @customer_ledger.sum(:downpayment)

                %td
              %tr
                %td
                %td 
                  %strong PROCESSING FEE
                %td
                %td
                %td
                %td
                %td
                  %strong
                    = @customer.processing_fees
                %td
                %td
                  
              - total_processing_fee = 0
              - @customer_ledger.each do |p|
                - if p.processing_fee != 0.0
                  %tr
                    %td
                    %td Payment

                    %td 
                      = p.payment_date.strftime("%b-%d-%Y %I:%M")
                    %td
                      = p.or_num
                    %td
                      = @customer.customer
                    %td
                      = p.memo
                    %td
                    %td
                      - total_processing_fee += p.processing_fee
                      = sprintf "%.2f", p.processing_fee
                    %td
                      = @customer.processing_fees - total_processing_fee
              %tr
                %td
                %td Total Paid
                %td 
                %td
                %td
                %td
                %td                      
                %td
                  %strong
                    = sprintf "%.2f", @customer_ledger.sum(:processing_fee)
                    - total_debit += @customer_ledger.sum(:processing_fee)
                %td

              - total_penalties = 0
              %tr
                %td
                %td 
                  %strong PENALTY
                %td
                %td
                %td
                %td
                %td
                %td
                %td
              - @customer_ledger.each do |p|
                - if p.penalty > 0
                  %tr
                    %td 
                    %td 
                      Payment

                    %td 
                      = p.payment_date.strftime("%b-%d-%Y")
                    %td
                      = p.or_num
                    %td
                      = @customer.customer
                    %td
                      = p.memo
                    %td
                    %td
                      = sprintf "%.2f", p.penalty
                      - total_penalties += p.penalty
                    %td
                      = sprintf "%.2f", total_penalties
              %tr
                %td
                %td Total Penalty
                %td 
                %td
                %td
                %td
                %td                      
                %td
                  %strong
                    = sprintf "%.2f", total_penalties
                %td

              %tr
                %td
                %td 
                  %strong Others
                %td
                %td
                %td
                %td
                %td
                %td
                %td
              - @customer_ledger.each do |p|
                - if p.others > 0
                  %tr
                    %td
                    %td 
                      Payment

                    %td 
                      = p.payment_date.strftime("%b-%d-%Y")
                    %td
                      = p.or_num
                    %td
                      = @customer.customer
                    %td
                      = p.memo
                    %td
                    %td
                      = sprintf "%.2f", p.others
                      - total_others += p.others
                    %td
                      = sprintf "%.2f", total_others


              %tr
                %td
                %td Total Others
                %td 
                %td
                %td
                %td
                %td                      
                %td
                  %strong
                    = sprintf "%.2f", total_others
                %td

              %tr
                %td
                %td 
                  %strong Grand Total
                %td
                %td
                %td
                %td
                %td
                %td
                %td
                
              %tr
                %td
                %td 
                  Balanced

                %td 
                %td
                %td
                %td
                %td
                  %strong
                    = sprintf "%.2f", total_debit
                %td
                  %strong
                    = sprintf "%.2f", total_credit + total_processing_fee
                %td
                  %strong
                    = sprintf "%.2f", total_debit - total_credit

              %tr
                %td
                %td 
                  Total Interest, Penalty, Others

                %td 
                %td
                %td
                %td
                %td
                  %strong
                %td
                  %strong
                    = sprintf "%.2f", total_i + total_penalties + total_others
                %td
                  %strong
              