%p#notice= notice
.row
  .col-lg-4
    %p
      %b Customer:
      = @amortization.customer
    %p
      %b Blocklot:
      = @amortization.blocklot
    %p
      %b Contract price:
      = number_with_precision(@amortization.contract_price, :precision => 2)
    %p
      %b Processing fees:
      = number_with_precision(@amortization.processing_fees, :precision => 2)
    %p
      %b Downpayment:
      = @amortization.downpayment
    %p
      %b Terms:
      = @amortization.terms
    %p
      %b Interest:
      = @amortization.interest
    %p
      %b Contract date:
      = @amortization.contract_date

    = link_to 'Edit', edit_amortization_path(@amortization)
    \|
    = link_to 'Back', amortizations_path


    - terms = @amortization["terms"].to_i
    - contract_price = @amortization["contract_price"].to_i
    - processing_fees = @amortization["processing_fees"].to_i
    - downpayment = @amortization["downpayment"].to_f
    - interest_rate = @amortization["interest"].to_i
    - balance =  contract_price.to_f - (processing_fees.to_f + downpayment.to_f)
    - monthly_amort = FinanceMath::Loan.new(nominal_rate: interest_rate, duration: terms, amount: balance).pmt

    %p
      %strong Principal Balance:
      = @amortization["balance"]
      -#- @amortization.update(balance: balance)

    .h1
      %strong AddPayment
    = simple_form_for("customer_payments", url: "/amortizations/process_pay", method: "post") do |f|
      .field
        = f.hidden_field "id", :value => "#{params[:id]}"
      .field
        = f.label :payment
        = f.number_field :payment
      .field
        = f.label :mode_of_payment
        = f.select :mode_of_payment, options_for_select([["Cash"],["Check"]])
      .field
        = f.label :check_bank
        = f.text_field :check_bank
      .field
        = f.label :check_no
        = f.text_field :check_no
      .field
        = f.label :bank_account_id
        = f.select :bank_account_id, options_for_select(BankAccount.all.order(:name).collect{ |u| [u.name, u.id]}), {:required => "true"}
      .field
        = f.label :ar_account_id
        = f.select :ar_account_id, options_for_select(ArAccount.all.order(:name).collect{ |u| [u.name, u.id]}),{:required => "true"}
      .field
        = f.label :penalty
        = f.number_field :penalty
      .field
        = f.label :processing
        = f.number_field :processing
      .field
        = f.label :reservation
        = f.number_field :reservation
      .field
        = f.label :others
        = f.number_field :others
      .field
        = f.label :equity
        = f.number_field :equity
      .field
        = f.label :advance_payment_to_principal
        = f.number_field :advance_payment_to_principal

      .actions
        = f.submit 'Save'
  .col-lg-8
    %table#amor_line_items.table.table-striped.table-bordered.nowrap
      %thead
        %tr
          %th #
          %th Period
          %th Principal
          %th Interest
          %th Total
          %th Balance
          %th is_paid?
      %tbody
        - @amortization.amortization_line_items.order("term asc").each do |ai|
          %tr
            %td 
              = ai.term
            %td 
              = ai.period
            %td
              = sprintf "%.2f", ai.principal
            %td
              = sprintf "%.2f",ai.interest
            %td
              = sprintf "%.2f", ai.monthly_amort
            %td
              = sprintf "%.2f", ai.balance
            %td
              - if ai.is_paid == true
                paid
              - else
                unpaid
              
    %br/
          
:javascript
  $('#amor_line_items').DataTable({
    dom: '<"html5buttons"B>lTfgtip',
    buttons: [
        { extend: 'copy'},
        {extend: 'csv'},
        {extend: 'excel', title: 'Customers'},

        {extend: 'print',
            customize: function (win){
                $(win.document.body).addClass('white-bg');
                $(win.document.body).css('font-size', '10px');

                $(win.document.body).find('table')
                        .addClass('compact')
                        .css('font-size', 'inherit');
            }
        }
    ],

    responsive: true  
  });